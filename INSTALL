These are the installation instructions for the Manticore compiler and
runtime system.  This document is organized into three sections: the
first lists the requirements for building the system and running
Manticore programs; the second give installation instructions for the
distribution; and the third gives installation instructions for
building from the svn repository.


------------------------------------------------------------------------
REQUIREMENTS
------------

Manticore currently only supports the x86-64 (a.k.a. AMD64)
architecture running on either Linux or Mac OS X. It is possible to
build the compiler on other systems (see below), but we have not
ported the runtime or code generator to them yet.

Manticore is implemented in a mix of C and SML code.  You will need a
recent version of SML/NJ (version 110.68+) installed.  Furthermore,
your installation should include the MLRISC library.


------------------------------------------------------------------------
BUILDING AND INSTALLING THE DISTRIBUTION
----------------------------------------

Our first step is to run the configure script.

	./configure

This command links the compiler against the MLRISC libraries provided
with the SML/NJ installation. Alternatively, we can build against 
external MLRISC libraries.

	./configure --with-mlrisc=<path to mlrisc>

To build the compiler, we use the following command.

        make build

We can install locally

        make local-install

or globally.

        make install

------------------------------------------------------------------------
BUILDING FROM SVN
-----------------

Building and installing the system from svn sources follows the same
steps as above, but you first must initialize the configuration
script.  To do so, run the following two commands:

	autoheader -Iconfig
	autoconf -Iconfig

Then proceed with the installation instructions from the previous
section.

------------------------------------------------------------------------
BUILDING ON WINDOWS
-----------------

This does not quite work yet, as there is not yet a version of gcc in
cygwin that is capable of targeting 64-bit. However, when there is, this 
should be close:

1) Rebuild SML/NJ from a clean checkout under CYGWIN. Note that you will 
need to set:
export SMLNJ_CYGWIN_RUNTIME=1

2) From CYGWIN, run autoheader and autoconf as listed above, then:
export SMLN_CMD=/home/USER/smlnj/bin/sml
./configure --with-mlrisc=/home/USER/smlnj/MLRISC --target x86_64-pc-cygwin

