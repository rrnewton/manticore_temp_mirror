(* Test calling conventions.
 * 
 * Run me by saying
 *    mc -Cdebug=true -Cscheduler=test-calling-conventions triv.pml
 *) 

#include "types.def"
#include "testing.def"
#include "vproc-queue.def"
#include "runtime-offsets.def"
#include "scheduling-ops.def"

#include "ltc.def"
#include "futures.def"

define @test1 (/ exh : exh) : bool =
  let epsilon : float = 0.01
  fun eq (f1 : float, f2 : float / exh : exh) : bool =
      return(F32Lt(F32Abs(F32Sub(f1, f2)), epsilon))

  fun floatTest (f1 : float, f2 : float / exh : exh) : float =
      if F32Lt(f1, 1.0)
         then return(f2)
         else apply floatTest(F32Sub(f1, 1.0), F32Add(f2, 1.0) / exh)
  let f : float = apply floatTest(3.0, 0.0 / exh)
  let b : bool = apply eq(f, 3.0 / exh)
  return(b)
;

define @test-cc-startup ( /exh : exh) : () =
  do @default-scheduler-startup (/exh)

  do_test(test1)
  return ()
;
