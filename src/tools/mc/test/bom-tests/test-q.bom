(* test-q.bom
 *
 * COPYRIGHT (c) 2007 The Manticore Project (http://manticore.cs.uchicago.edu)
 * All rights reserved.
 *)

module TestQ

  extern void* M_NewWorkQueue(void*)           __attribute__((alloc));
  extern void* M_WorkDequeue(void*,void*)      __attribute__((alloc));
  extern void M_WorkEnqueue(void*,void*,void*) __attribute__((alloc));

  fun test (u : unit / exh : cont(any) (* exh *)) : any =
    let vp : vproc = host_vproc
    let nq : any = ccall M_NewWorkQueue(vp)
    do ccall M_WorkEnqueue (vp, nq, "Hello, world.")
    fun loop (n : int / exh : cont(any) (* exh *)) : any =
      let a : any = ccall M_WorkDequeue (vp, nq)
      if Equal (n, 0)
        then return (a)
        else do ccall M_WorkEnqueue (vp, nq, a)
             let n : int = I32Sub (n, 1)
             apply loop (n / exh)
    let b : any = apply loop (60000 / exh) (* 60000 works, 61000 doesn't *)
    return (b)


