module Assign

extern void M_Print (void *);

  fun doit (i : int / exh : cont(any)) : int =
      fun h' (x : int / exh : cont(any)) : int = return (999)
      let h : fun (int / cont(any) -> int) = promote (h')
      let cell : ![int,fun (int / cont(any) -> int)] = galloc (1234,h)
(*      let cell :![int,fun (int / cont(any) -> int)] = promote (cell')*)
      fun f (x : int / exh : cont(any)) : int = return (#0(cell))
      let q:[int,int] = alloc(16,12)
      if I32Eq (i,0)
         then do ccall M_Print ("hi\n\000")
              let z : int = #0(q)
	      do #0(cell) := z
	      do #1(cell) := f                	      
              let x : int = apply f (i / exh)
              return (x)
         else let z:int = #1(q)
	      return (z)
