/* log-events.json
 *
 * COPYRIGHT (c) 2008 The Manticore Project (http://manticore.cs.uchicago.edu)
 * All rights reserved.
 *
 * This file describes the various events that can be logged by the Manticore system.  It defines
 * a JSON object with three fields:
 *
 *	data	-- a string representing the YYYYMMDD date as a hexadecimal literal.
 *
 *	version	-- an array of three integers representing the major, minor, and patch-level
 *		   version numbers of the file.  The version numbers should be increased as
 *		   follows:
 *			-- increase the patch number when changing the description of an event or
 *			   argument.
 *			-- increase the minor-version number when adding new events to the end of
 *			   the file.  Such changes should not effect existing logs with the same
 *			   major-version number.
 *			-- increase the major version number when changing the order of events,
 *			   or changing the order, number, or type of argument to existing events.
 *
 *	events	-- an array of the event descriptors.
 *
 * The fields of an event descriptor are
 *	name	-- symbolic name
 *
 *	args	-- an array of argument descriptors.  Each log entry can have upto 20 bytes of
 *		   argument data, which starts at byte 12 of the event object.
 *			name	-- the argument's name
 *			ty	-- the type of the argument.  The types are:
 *					addr	-- 64-bit address or ML value
 *					int	-- 32-bit signed integer
 *					word	-- 32-bit unsigned integer
 *					float	-- 32-bit floating-point number
 *					double	-- 64-bit floating-point number
 *					strN	-- N-character string (0 < N <= 20)
 *			loc	-- the offset of the field (in bytes).  This field is
 *				   optional for when the order of arguments does not determine
 *				   the layout.
 *			desc	-- English-language description of argument
 *
 *	kind	-- one of EVENT", START", or "END"
 *
 *	desc	-- English-language description of event
 */
{
  "date" : "0x20081103",
  "version" : [1, 0, 0],
  "events" : [
	{ "name" : "NoEvent",
	  "args" : [],
	  "kind" : "EVENT",
	  "desc" : "an undefined event"
	},
    /* VProc events */
	{ "name" : "VProcStartIdle",
	  "args" : [],
	  "kind" : "EVENT",
	  "desc" : "start idle vproc"
	},
	{ "name" : "VProcStartMain",
	  "args" : [],
	  "kind" : "EVENT",
	  "desc" : "start main vproc"
	},
	{ "name" : "VProcExitMain",
	  "args" : [],
	  "kind" : "EVENT",
	  "desc" : "exit main vproc"
	},
	{ "name" : "VProcSleep",
	  "args" : [],
	  "kind" : "EVENT",
	  "desc" : "vproc going to sleep"
	},
	{ "name" : "VProcDequeue",
	  "args" : [],
	  "kind" : "EVENT",
	  "desc" : "dequeue from secondary scheduling queue"
	},
	{ "name" : "PreemptSignal",
	  "args" : [],
	  "kind" : "EVENT",
	  "desc" : "preemption signal occurs"
	},
	{ "name" : "GCSignal",
	  "args" : [],
	  "kind" : "EVENT",
	  "desc" : "GC signal occurs"
	},
    /* GC events */
	{ "name" : "MinorGCStart",
	  "args" : [],
	  "kind" : "START",
	  "desc" : "minor GC starts"
	},
	{ "name" : "MinorGCEnd",
	  "args" : [],
	  "kind" : "END",
	  "desc" : "minor GC ends"
	},
	{ "name" : "MajorGCStart",
	  "args" : [],
	  "kind" : "START",
	  "desc" : "major GC starts"
	},
	{ "name" : "MajorGCEnd",
	  "args" : [],
	  "kind" : "END",
	  "desc" : "major GC ends"
	},
	{ "name" : "GlobalGCInit",
	  "args" : [
	      {"name" : "id", "ty" : "word", "desc" : "index of collection"}
	    ],
	  "kind" : "START",
	  "desc" : "global GC initiated"
	},
	{ "name" : "GlobalGCEnd",
	  "args" : [
	      {"name" : "id", "ty" : "word", "desc" : "index of collection"}
	    ],
	  "kind" : "END",
	  "desc" : "global GC finished"
	},
	{ "name" : "GlobalGCVPStart",
	  "args" : [],
	  "kind" : "START",
	  "desc" : "global GC starts for vproc"
	},
	{ "name" : "GlobalGCVPDone",
	  "args" : [
	      {"name" : "nbytes", "ty" : "word", "desc" : "number of bytes copied"}
	    ],
	  "kind" : "END",
	  "desc" : "global GC ends for vproc"
	},
	{ "name" : "PromoteStart",
	  "args" : [
	      {"name" : "root", "ty" : "addr", "loc" : 16, "desc" : "value being promoted"}
	    ],
	  "kind" : "START",
	  "desc" : "major GC starts"
	},
	{ "name" : "PromoteEnd",
	  "args" : [
	      {"name" : "nbytes", "ty" : "word", "desc" : "number of bytes copied"}
	    ],
	  "kind" : "END",
	  "desc" : "major GC ends"
	},
    /* Runtime events */
	{ "name" : "RTPreemption",
	  "args" : [],
	  "kind" : "EVENT",
	  "desc" : "preemption handler invoked"
	},
	{ "name" : "RTFuture1Spawn",
	  "args" : [
	      {"name" : "fut", "ty" : "addr", "desc" : ""}
	    ],
	  "kind" : "EVENT",
	  "desc" : "spawned future"
	},
	{ "name" : "RTFuture1Touch",
	  "args" : [
	      {"name" : "fut", "ty" : "addr", "desc" : ""}
	    ],
	  "kind" : "EVENT",
	  "desc" : "touched future"
	},
	{ "name" : "RTFuture1Steal",
	  "args" : [
	      {"name" : "fut", "ty" : "addr", "desc" : ""}
	    ],
	  "kind" : "EVENT",
	  "desc" : "stole future"
	}
    ]
}
