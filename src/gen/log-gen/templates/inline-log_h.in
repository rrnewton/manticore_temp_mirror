/* inline-log.h
 *
 * COPYRIGHT (c) 2008 The Manticore Project (http://manticore.cs.uchicago.edu)
 * All rights reserved.
 *
 * Inline operations for recording log entries.
 *
 * WARNING: this file is generated; do not edit!!!
 */

#ifndef _INLINE_LOG_H_
#define _INLINE_LOG_H_

#ifdef ENABLE_LOGGING
#include "log.h"
#include "atomic-ops.h"
#include "vproc.h"
#ifdef HAVE_MACH_ABSOLUTE_TIME
#  include <mach/mach_time.h>
#endif

// get the pointer to the next log entry
STATIC_INLINE LogEvent_t *NextLogEvent (VProc_t *vp)
{
    LogBuffer_t *buf;

    do {
	buf = vp->log;
	int index = FetchAndInc(&(buf->next));
	if (index < LOGBUF_SZ) {
	    return &(buf->log[index]);
	    break;
	}
	SwapLogBuffers (vp);
    } while (true);

}

STATIC_INLINE void LogTimestamp (LogTS_t *ts)
{
#if HAVE_MACH_ABSOLUTE_TIME
    ts->ts_mach = mach_absolute_time();
#elif HAVE_CLOCK_GETTIME
    struct timespec t;
    clock_gettime (CLOCK_REALTIME, &t);
    ts->ts_val.sec = t.ts_sec;
    ts->ts_val.frac = t.ts_nsec;
#else
    struct timeval t;
    gettimeofday (&t, 0);
    ts->ts_val.sec = t.tv_sec;
    ts->ts_val.frac = t.tv_usec;
#endif
}

@GENERIC-LOG-FUNCTIONS@

@LOG-FUNCTIONS@

#else /* !ENABLE_LOGGING */

@DUMMY-LOG-FUNCTIONS@

#endif
#endif /* !_INLINE_LOG_H_ */

