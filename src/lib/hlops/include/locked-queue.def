(* locked-queue.def
 *
 * COPYRIGHT (c) 2007 The Manticore Project (http://manticore.cs.uchicago.edu)
 * All rights reserved.
 *
 * Types and HLops for locked-queues.
 *)

#ifndef _LOCKED_QUEUE_DEF_
#define _LOCKED_QUEUE_DEF_

#include "types.def"
#include "fgs.def"
#include "in-place-queue.def"

(* lock, head, tail, blocked fiber head, blocked fiber tail *)
typedef locked_queue = ![bool, in_place_queue_elt, in_place_queue_elt, in_place_queue_elt, in_place_queue_elt];

#define LOCKED_QUEUE_EMPTY          IN_PLACE_QUEUE_EMPTY

#define LOCKED_QUEUE_LOCK           0
#define LOCKED_QUEUE_HD             1
#define LOCKED_QUEUE_TL             2
#define LOCKED_QUEUE_BLOCKED_HD     3
#define LOCKED_QUEUE_BLOCKED_TL     4

(* vproc is the vproc on which the thread blocked *)
typedef blocked_thread = [cont(any), fgs, vproc];
#define BLOCKED_THREAD_CONT         0
#define BLOCKED_THREAD_FGS          1
#define BLOCKED_THREAD_VPROC        2

#define BLOCKED_THREAD_NEW(blockedK, fgs)    alloc(blockedK, fgs, host_vproc)

#define LOCKED_QUEUE_NEW_ELT(elt) IN_PLACE_QUEUE_NEW(elt)
define @locked-queue-new ( / exh : exh) : locked_queue;
define @locked-queue-dequeue (q : locked_queue / exh : exh) : option;
define @locked-queue-enqueue (q : locked_queue, elt : any / exh : exh) : ();
define @locked-queue-blocking-dequeue (q : locked_queue / exh : exh) : any;

#endif /* !_LOCKED_QUEUE_DEF_ */
