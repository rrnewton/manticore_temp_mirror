(* ir-dequeue.def
 *
 * COPYRIGHT (c) 2007 The Manticore Project (http://manticore.cs.uchicago.edu)
 * All rights reserved.
 *
 * Types and HLops for input-restricted dequeues.
 *)

#ifndef _IR_DEQUEUE_DEF_
#define _IR_DEQUEUE_DEF_

#include "types.def"

typedef ir_dequeue_elt = ![any, any, any];

#define IR_DEQUEUE_ELT_DATA    0
#define IR_DEQUEUE_ELT_NEXT    1
#define IR_DEQUEUE_ELT_PREV    2

#define IR_DEQUEUE_EMPTY	            enum(0)
#define IR_DEQUEUE_NEW(elt)		    alloc (elt, IR_DEQUEUE_EMPTY, IR_DEQUEUE_EMPTY)

(* lock bit, head, tail *)
typedef ir_dequeue = ![bool, ir_dequeue_elt, ir_dequeue_elt];

#define IR_DEQUEUE_LOCK       0
#define IR_DEQUEUE_HD         1
#define IR_DEQUEUE_TL         2

#define IR_DEQUEUE()          alloc(FALSE, IR_DEQUEUE_EMPTY, IR_DEQUEUE_EMPTY)

define @ird-push-hd(deq : ir_dequeue, elt : ir_dequeue_elt / exh : exh) : ();
define @ird-pop-hd(deq : ir_dequeue / exh : exh) : option;
define @ird-pop-tl(deq : ir_dequeue / exh : exh) : option;

(* spin lock *)
#include "../runtime/synch/spin-lock-fn.hlop"
define_spin_lock(ird, ir_dequeue, IR_DEQUEUE_LOCK)

#endif /* !_IR_DEQUEUE_DEF_ */
