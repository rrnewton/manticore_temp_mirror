(* curried-rope-sublist.hlop
 *
 * COPYRIGHT (c) 2007 The Manticore Project (http://manticore.cs.uchicago.edu)
 * All rights reserved.
 *
 * A version of rope-sublist with type
 *  (int * int) -> rope -> (list * bool).
 *
 * This reformulation happens to be convenient for rope-map-n functions.
 *)

#include "types.def"
#include "ropes.def"

extern void M_Print (void *);

define @rope-sublist (r : rope, start : int, len : int / exh : exh) : [list, bool];

define @curried-rope-sublist (start : int, len : int / exh : exh) : fun (rope / exh -> [list, bool]) =
  fun sub (r : rope / exh : exh) : [list, bool] = 
    @rope-sublist (r, start, len / exh)
  return (sub)
;
