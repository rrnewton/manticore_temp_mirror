(* rope-map.hlop
 *
 * COPYRIGHT (c) 2007 The Manticore Project (http://manticore.cs.uchicago.edu)
 * All rights reserved.
 *
 * For mapping a function over the elements of the leaves of a rope in parallel.
 *)

#include "types.def"
#include "futures.def"
#include "ropes.def"
#include "debugging.def"

(* use_rw ropes; *)

extern void M_Print(void*);
extern void M_PrintInt(int);

define @rope-divide (r : rope / exh : exh) : [rope, rope] =

  let emp : rope = LEAF(0,NIL)

  case r
    of CAT(len:int, depth:int, r1:rope, r2:rope) =>
         let tup : [rope, rope] = alloc (r1, r2)
         return (tup)
     | LEAF (len:int, data:list) =>
         let tup : [rope, rope] = alloc (r, emp)
         return (tup)
  end (* case *)
;
 
        
