(* assoc-list-set.hlop
 *
 * COPYRIGHT (c) 2007 The Manticore Project (http://manticore.cs.uchicago.edu)
 * All rights reserved.
 *
 * Set a tag to a value to the association list.  
 *)

#include "fgs.def"
#include "../synch/spin-lock-fn.hlop"
define_spin_lock(fgs, fgs, FGS_LOCK_OFFSET)

define @assoc-list-modify (atag : assoc_tag, elt : any, fgs : fgs / exh : exh) : any =
  let elt : any = promote(elt)   

   (* find the tag in the association list, initializing a fresh element if none exists *)
   fun replace (alist : assoc_list, acc : assoc_list / exh : exh) : assoc_list =
       case alist
	of ANIL =>
	   return(acc)
	 | ACONS (atag' : assoc_tag, elt' : any, alist' : assoc_list) => 
	   if Equal (atag, atag')
	       then apply replace (alist', ACONS(atag', elt,  acc) / exh)
	       else apply replace (alist', ACONS(atag', elt', acc) / exh)
       end

  let mask : bool = @spin-lock-fgs (fgs / exh)

  let alist : assoc_list = SELECT(FGS_ALIST_OFFSET, fgs)
  let alistNew : assoc_list = apply replace(alist, ANIL / exh)
  let alistNew : assoc_list = promote(alistNew)
  do UPDATE(FGS_ALIST_OFFSET, fgs, alistNew)

  let _ : unit = @spin-unlock-fgs (fgs, mask / exh)


  return(elt)
;
