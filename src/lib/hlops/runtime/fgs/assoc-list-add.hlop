(* assoc-list-add.hlop
 *
 * COPYRIGHT (c) 2007 The Manticore Project (http://manticore.cs.uchicago.edu)
 * All rights reserved.
 *
 * Add a tag with its associated value to the association list.  
 *   IMPORTANT: the caller must use the return elt in place of elt, since we promote the former.
 *)

#include "fgs.def"
#include "../synch/spin-lock-fn.hlop"
define_spin_lock(fgs, fgs, FGS_LOCK_OFFSET)

define @assoc-list-add (atag : assoc_tag, elt : any, fgs : fgs / exh : exh) : any =
  fun initTag (/ exh : exh) : any =      
     (* NOTE: subtle case here!  we return elt at the end of this function, so we must get a handle
      * on its promoted value here.
      *)
      let elt : any = (any)elt
      let elt : any = promote(elt)
      let alistSrc : assoc_list = SELECT(FGS_ALIST_OFFSET, fgs)
      let alistNew : assoc_list = ACONS (atag, elt, alistSrc)
      let alistNew : assoc_list = promote (alistNew)
      do UPDATE(FGS_ALIST_OFFSET, fgs, alistNew)
      return(elt)
  let mask : bool = @spin-lock-fgs (fgs / exh)
  let eltOpt : option = @assoc-list-find(atag, SELECT(FGS_ALIST_OFFSET, fgs) / exh)
  let elt : any = 
	    case eltOpt
	     of NONE =>
	      (* no other fiber has initialized the tag, so initialize it *)
		apply initTag(/exh)
	      | SOME (elt : any) => 
		return(elt)
            end
  let _ : unit = @spin-unlock-fgs (fgs, mask / exh)
  return(elt)
;
