(* barrier-call.hlop
 * 
 * COPYRIGHT (c) 2008 The Manticore Project (http://manticore.cs.uchicago.edu)
 * All rights reserved.
 *
 * Synchronize a group of fibers on a barrier and then call a finish continuation.  The barrier
 * is reentrent.
 *)

#include "types.def"

#ifndef _BARRIER_CALL_
#define _BARRIER_CALL_

#define COUNTER_OFF        0
#define N_OFF              1
#define ARGU_OFF           2
#define CONT_OFF           3

typedef barrier_call = ![int, int, list, cont(list)];

#define ADD_CALLER(bc)       let _ : int = I32FetchAndAdd(&N_OFF(bc), 1)
#define REMOVE_CALLER(bc)    let _ : int = I32FetchAndAdd(&N_OFF(bc), -1)

define @barrier-call-new(k : cont(list) / exh: exh) : barrier_call;
define @barrier-call (bc : barrier_call, arg : any / exh : exh) : ();

#endif /*! _BARRIER_CALL_ */
