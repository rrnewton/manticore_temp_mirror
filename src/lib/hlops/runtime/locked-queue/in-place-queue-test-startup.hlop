#include "types.def"
#include "testing.def"
#include "in-place-queue.def"
#include "ipq.def"

#include "in-place-queue-fn.def"
define_in_place_queue(tst,ipq,0,1)

define @test-q (q : ipq / exh : exh) : bool = 
   let qVal : [int] = wrap(999)
   let qElt : in_place_queue_elt = IN_PLACE_QUEUE_NEW(qVal)

   do @in-place-enqueue-tst (q, qElt / exh)
   cont none () = return (FALSE)
   cont some (x:any) = 
        let b : bool = Equal(x, qVal)
        return (b)
   do @in-place-dequeue-tst (q, none, some / exh)

   return (TRUE)
;

define @test1 (/ exh: exh) : bool =
  let q : ipq = alloc(IN_PLACE_QUEUE_EMPTY,IN_PLACE_QUEUE_EMPTY)
  let b : bool = @test-q(q/exh)
  cont none () = return (TRUE)
  cont some (x:any) = return (FALSE)
  do @in-place-dequeue-tst (q, none, some / exh)  
  return (b)
;

define @in-place-queue-test-startup ( / exh : exh) : () =
   do_test(test1)
   return ()
;
