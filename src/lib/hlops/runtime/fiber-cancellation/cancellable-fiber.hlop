(* cancellable-fiber.hlop
 * 
 * COPYRIGHT (c) 2008 The Manticore Project (http://manticore.cs.uchicago.edu)
 * All rights reserved.
 *
 * Takes a fiber and a cleanup function and returns a cancellable fiber and a
 * cell for cancelling the fiber.
 *)

#include "types.def"
#include "tags.def"
#include "debugging.def"
#include "fgs.def"
#include "logging.def"
#include "fiber-cancellation.def"
#include "scheduler-ops.def"

define inline @cancellable-fiber (  cancelCell : cancel_cell, 
				    fgs : fgs, 
				    k : fiber, 
				    cleanupFun : fun( / exh -> ) / exh : exh) : fiber =

 (* scheduler action that hosts the fiber k, killing it if necessary *)
  cont switch (s : signal) =
       if Equal(s, STOP)
	  then @forward(host_vproc, STOP / exh)
          else if SELECT(0, cancelCell)
		  then do apply cleanupFun (/exh)
                       @forward(host_vproc, STOP / exh)
           else let _ : unit = @atomic-yield(host_vproc / exh)
                let k : fiber = (fiber)s
                @run(host_vproc, switch, fgs, k / exh)

  cont kWrapper (_ : unit) =
       @run(host_vproc, switch, fgs, k / exh)

  let kWrapper : fiber = (fiber)kWrapper  
  return(kWrapper)
;