(* future1-cancel.hlop
 * 
 * COPYRIGHT (c) 2007 The Manticore Project (http://manticore.cs.uchicago.edu)
 * All rights reserved.
 *
 * Cancel a one-toucher future.
 *)

#include "types.def"
#include "futures.def"
#include "runtime-offsets.def"
#include "logging.def"
#include "assert.def"
#include "debugging.def"

define inline @future1-cancel (fut : future / exh : exh) : unit =
  fun cancel (cancelCell : cancel_cell / exh : exh) : () =
      fun cancelChildren (children : list / exh : exh) : () =
          case children
	   of NIL => return()
	    | CONS(c : cancel_cell, children : list) =>
	      do apply cancel(c / exh)
              apply cancelChildren(children / exh)
          end
print_msg("")
      let _ : unit = @cancel-fiber(cancelCell / exh)
      let children : list = SELECT(CHILDREN_OFF, cancelCell)
      apply cancelChildren (children / exh)      

  let cancelCell : cancel_cell = SELECT(FUTURE1_CANCEL_CELL_OFF, fut)
  do apply cancel(cancelCell / exh)
  return(UNIT)
;
