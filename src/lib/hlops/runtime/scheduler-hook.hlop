(* scheduler-hook.hlop
 *
 * COPYRIGHT (c) 2007 The Manticore Project (http://manticore.cs.uchicago.edu)
 * All rights reserved.
 *
 * Initialize the scheduler pointer for the vprocs.
 *)

#include "runtime-offsets.def"
#include "types.def"
#include "scheduling-ops.def"
#include "debugging.def"

define @scheduler-hook (vps : list / exh : exh) : () =

 (* @scheduler-hook gets called whenever new schedulers initialize, but the scheduler function should only
  * get initialized once.
  *)
  cont exit () = return()
  let sk : cont(signal) = vpload(VP_SCHED_CONT, host_vproc)
  do if NotEqual(sk, NIL)
        then throw exit()
        else return()

  cont sched (k : signal) =
       @forward(host_vproc, k / exh)

  let sched : cont(signal) = promote(sched)
  (* initialize the scheduler entry point *)
  fun initSchedulerHook (vps : list) : () =
      case vps
       of NIL => return()
	| CONS (vp : vproc, vps : list) =>
          let sk : cont(signal) = vpload(VP_SCHED_CONT, vp)
          if Equal(sk, NIL)
             then do vpstore(VP_SCHED_CONT, vp, sched)
                  apply initSchedulerHook(vps)
             else return()
      end
  do apply initSchedulerHook(vps)

  return ()
;
