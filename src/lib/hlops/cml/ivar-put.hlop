(* ivar-put.hlop
 *
 * COPYRIGHT (c) 2007 The Manticore Project (http://manticore.cs.uchicago.edu)
 * All rights reserved.
 *
 * Put function for ivars.  
 * 
 * The default scheduling decision for the moment is to enqueue unblocked threads on the host vproc.
 *)

#include "ivar.def"
#include "vproc-queue.def"
#include "debugging.def"
#include "assert.def"

define inline @ivar-put (arg : [ivar, any] / exh : exh) : unit = 
  let x : any = #1(arg)
  let x : any = (any)x
  let blockedThreads : list = @ivar-put-no-sched(arg / exh)
  fun unblock (elt : any / exh : exh) : unit =
     (* unpack fgs and the blocked continuation *)
      let fgs : fgs = #0((ivar_blocked_thread)elt)
      let k' : cont(any) = #1((ivar_blocked_thread)elt)     
     (* make a fiber that passes the ivar value to the blocked continuation *)
      cont k (_ : unit) = throw k'(x)
      let k : fiber = (fiber)k
      do @enqueue(host_vproc, fgs, k / exh)
      return(UNIT)
  let arg : [fun (any / exh -> unit), list] = alloc(unblock, blockedThreads)
  @list-app(arg / exh)
;
